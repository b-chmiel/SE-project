{
  "swagger" : "2.0",
  "info" : {
    "title" : "Car Workshop",
    "version" : "0.1.1i",
    "description" : "<h2>List of currently implemented methods</h2></br><a href=\"https://1drv.ms/u/s!Aj9U8Dnh2AB9gYojtWPvZ0ViyQNXQw?e=h3t1Nl\">Notes</a>",
    "contact" : {
      "email" : "k.baciejowski@gmail.com"
    }
  },
  "tags" : [ {
    "name" : "users",
    "description" : "Operations about users"
  }, {
    "name" : "cars",
    "description" : "Operations on cars"
  } ],
  "paths" : {
    "/user" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Add new user to the system",
        "operationId" : "addClient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "New user attributes",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "username", "password", "userType", "name", "surname" ],
            "properties" : {
              "username" : {
                "type" : "string",
                "example" : "myUser"
              },
              "password" : {
                "type" : "string",
                "example" : "myPass"
              },
              "userType" : {
                "type" : "string",
                "enum" : [ "WORKSHOP_EMPLOYEE", "CLIENT", "INSURANCE_EMPLOYEE", "UNAUTHORIZED" ],
                "example" : "CLIENT"
              },
              "name" : {
                "type" : "string",
                "example" : "Jan"
              },
              "surname" : {
                "type" : "string",
                "example" : "Nowak"
              },
              "phoneNumber" : {
                "type" : "string",
                "example" : +48123456789
              },
              "email" : {
                "type" : "string",
                "example" : "mail@example.com"
              },
              "discount" : {
                "type" : "integer",
                "format" : "$int32",
                "example" : 5,
                "default" : 0
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Validation exception"
          }
        }
      },
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Update an existing user",
        "operationId" : "updateClient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "New user attributes",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "guid" ],
            "properties" : {
              "guid" : {
                "type" : "string",
                "example" : "60fe8aa1-361c-4d12-a384-e247738dc450"
              },
              "username" : {
                "type" : "string",
                "example" : "myUser"
              },
              "password" : {
                "type" : "string",
                "example" : "myPass"
              },
              "userType" : {
                "type" : "string",
                "enum" : [ "WORKSHOP_EMPLOYEE", "CLIENT", "INSURANCE_EMPLOYEE", "UNAUTHORIZED" ],
                "example" : "CLIENT"
              },
              "name" : {
                "type" : "string",
                "example" : "Jan"
              },
              "surname" : {
                "type" : "string",
                "example" : "Nowak"
              },
              "phoneNumber" : {
                "type" : "string",
                "example" : +48123456789
              },
              "email" : {
                "type" : "string",
                "example" : "mail@example.com"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Validation exception"
          }
        }
      }
    },
    "/user/{guid}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Find user by GUID",
        "operationId" : "getUserByGuid",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "guid",
          "in" : "path",
          "description" : "GUID of user to return",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Invalid GUID supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    },
    "/user/signin" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Obtain GUID using login and password",
        "operationId" : "signIn",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Authorization data",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "username", "password" ],
            "properties" : {
              "username" : {
                "type" : "string",
                "example" : "myUser"
              },
              "password" : {
                "type" : "string",
                "example" : "myPass"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "guid" : {
                  "type" : "string",
                  "example" : "60fe8aa1-361c-4d12-a384-e247738dc450"
                },
                "role" : {
                  "type" : "string",
                  "enum" : [ "WORKSHOP_EMPLOYEE", "CLIENT", "INSURANCE_EMPLOYEE", "UNAUTHORIZED" ],
                  "example" : "CLIENT"
                }
              }
            }
          },
          "404" : {
            "description" : "User with such credentials does not exist"
          }
        }
      }
    },
    "/car" : {
      "post" : {
        "tags" : [ "cars" ],
        "summary" : "Add new car to the system",
        "operationId" : "addCar",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "schema" : {
            "$ref" : "#/definitions/Car"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Validation exception"
          },
          "401" : {
            "description" : "Authorization failed"
          },
          "403" : {
            "description" : "No right to perform operation"
          }
        },
        "security" : [ {
          "GuidAuth" : [ ]
        } ]
      }
    },
    "/car/{licensePlate}" : {
      "get" : {
        "tags" : [ "cars" ],
        "summary" : "Find car by the license plate",
        "operationId" : "getCar",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "licensePlate",
          "in" : "path",
          "description" : "License plate of car to return",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Car"
            }
          },
          "400" : {
            "description" : "Invalid license plate supplied"
          },
          "401" : {
            "description" : "Authorization failed"
          },
          "403" : {
            "description" : "No right to perform operation"
          },
          "404" : {
            "description" : "Car not found"
          }
        },
        "security" : [ {
          "GuidAuth" : [ ]
        } ]
      }
    },
    "/car/{licensePlate}/profile" : {
      "get" : {
        "tags" : [ "cars" ],
        "summary" : "Find car diagnostic profile by license plate",
        "operationId" : "getProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "licensePlate",
          "in" : "path",
          "description" : "License plate of car to return",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/DiagnosticProfile"
            }
          },
          "400" : {
            "description" : "Invalid license plate supplied"
          },
          "401" : {
            "description" : "Authorization failed"
          },
          "403" : {
            "description" : "No right to perform operation"
          },
          "404" : {
            "description" : "Car not found"
          }
        },
        "security" : [ {
          "GuidAuth" : [ ]
        } ]
      }
    }
  },
  "definitions" : {
    "User" : {
      "type" : "object",
      "required" : [ "guid", "username", "password", "userType", "name", "surname" ],
      "properties" : {
        "guid" : {
          "type" : "string",
          "example" : "60fe8aa1-361c-4d12-a384-e247738dc450"
        },
        "username" : {
          "type" : "string",
          "example" : "myUser"
        },
        "password" : {
          "type" : "string",
          "example" : "myPass"
        },
        "userType" : {
          "type" : "string",
          "enum" : [ "WORKSHOP_EMPLOYEE", "CLIENT", "INSURANCE_EMPLOYEE", "UNAUTHORIZED" ],
          "example" : "CLIENT"
        },
        "name" : {
          "type" : "string",
          "example" : "Jan"
        },
        "surname" : {
          "type" : "string",
          "example" : "Nowak"
        },
        "phoneNumber" : {
          "type" : "string",
          "example" : +48123456789
        },
        "email" : {
          "type" : "string",
          "example" : "mail@example.com"
        },
        "discount" : {
          "type" : "integer",
          "format" : "$int32",
          "example" : 5,
          "default" : 0
        }
      }
    },
    "Car" : {
      "type" : "object",
      "required" : [ "licencePlate", "model", "type" ],
      "properties" : {
        "licencePlate" : {
          "type" : "string",
          "example" : "DDZ 18N0"
        },
        "model" : {
          "type" : "string",
          "example" : "Škoda Fabia 2012"
        },
        "type" : {
          "type" : "string",
          "example" : "hatchback",
          "enum" : [ "sedan", "hatchback" ]
        },
        "username" : {
          "type" : "string",
          "example" : "myUser"
        }
      }
    },
    "DiagnosticProfile" : {
      "type" : "object",
      "required" : [ "licencePlate" ],
      "properties" : {
        "licencePlate" : {
          "type" : "string",
          "example" : "DDZ 18N0"
        },
        "engine" : {
          "type" : "string",
          "example" : "2120.00cm3"
        },
        "body" : {
          "type" : "string",
          "example" : "black"
        },
        "lowVoltage" : {
          "type" : "string",
          "example" : "12V"
        },
        "lighting" : {
          "type" : "string"
        },
        "brakes" : {
          "type" : "string"
        },
        "sensors" : {
          "type" : "string",
          "example" : "parking sensors"
        },
        "miscellaneous" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "conditionig" : {
          "type" : "string",
          "example" : "full"
        }
      }
    }
  },
  "securityDefinitions" : {
    "GuidAuth" : {
      "type" : "apiKey",
      "in" : "header",
      "name" : "Guid"
    }
  },
  "schemes" : [ "https" ],
  "host" : "se-project-2020.herokuapp.com",
  "basePath" : "/api/0.1.1"
}